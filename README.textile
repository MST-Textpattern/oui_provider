h1. oui_player_provider

h2. Introduction

Extension base oui_player v2+.
See "oui_player":https://github.com/NicolasGraph/oui_player for more informations.

h3. Supported extensions

As known at the last plugin release…

* "Abc News":http://abcnews.go.com/video: "oui_abcnews":https://github.com/NicolasGraph/oui_abcnews;
* "Archive":https://archive.org/: "oui_archive":https://github.com/NicolasGraph/oui_archive;
* "Bandcamp":https://bandcamp.com/: "oui_bandcamp":https://github.com/NicolasGraph/oui_bandcamp;
* "Dailymotion":http://www.dailymotion.com/: "oui_dailymotion":https://github.com/NicolasGraph/oui_dailymotion;
* "Giphy":https://giphy.com/: "oui_giphy":https://github.com/NicolasGraph/oui_giphy;
* "HTML5 audio":https://developer.mozilla.org/docs/Web/HTML/Element/audio: "oui_audio":https://github.com/NicolasGraph/oui_audio;
* "HTML5 video":https://developer.mozilla.org/docs/Web/HTML/Element/video: "oui_video":https://github.com/NicolasGraph/oui_video;
* "Mixcloud":https://www.mixcloud.com/: "oui_mixcloud":https://github.com/NicolasGraph/oui_mixcloud;
* "Myspace videos":https://myspace.com/myspace/videos: "oui_myspace":https://github.com/NicolasGraph/oui_myspace;
* "Soundcloud":https://soundcloud.com/: "oui_soundcloud":https://github.com/NicolasGraph/oui_soundcloud;
* "Twitch":https://www.twitch.tv/: "oui_twitch":https://github.com/NicolasGraph/oui_twitch;
* "Viddsee":https://www.viddsee.com/: "oui_viddsee":https://github.com/NicolasGraph/oui_viddsee;
* "Vimeo":http://www.vimeo.com/: "oui_vimeo":https://github.com/NicolasGraph/oui_vimeo;
* "Vine":http://vine.co/: "oui_vine":https://github.com/NicolasGraph/oui_vine;
* "Youtube":https://www.youtube.com/: "oui_youtube":https://github.com/NicolasGraph/oui_youtube.

h3. Plugin requirements

oui_player's minimum requirements:

* "Textpattern CMS":http://textpattern.com/ 4.6+;
* "oui_player":https://github.com/NicolasGraph/oui_player v2+;
* Any of the above provider related extension.

h2. Plugin management

h3. Installation

h4. From the admin interface

Follow the below instructions before or after installing the wanted oui_player extensions:

# "Download":https://github.com/NicolasGraph/oui_player/releases the compiled plugin file or the source to compile a customized file.
# Paste the content of the compiled plugin file under the "Admin > Plugins":?event=plugin tab and click the _Upload_ button.
# Confirm the plugin install by clicking the _Install_ button on the plugin preview page.
# Enable the plugin.

Once the plugin and its extensions enabled, you will need to complete the setup by clicking _Options_ or visiting your "Admin > Preferences":?event=prefs#prefs_group_oui_player tab.
This last step need to be repeated each time you add or remove one or more oui_player extensions to update the plugin preferences.

h4. Via Composer (not available yet)

After "installing Composer":https://getcomposer.org/doc/00-intro.md…

# Target your project directory:
@$ cd /path/to/your/textpattern/installation/dir@
# If it's not already done, lock your version of Txp:
@$ composer require textpattern/lock:4.6.2@, where @4.6.2@ is the Txp version in use.
# Install oui_player:
@$ composer require nicolasgraph/oui_player@
# Connect to the Txp admin interface and click _Options_ or visit your "Admin > Preferences":?event=prefs#prefs_group_oui_player tab to fill the plugin prefs.

h3. Update

h4. From the admin interface

Follow the install instructions.
If you are updating from v1.*, be sure to install all wanted extensions before to visit the "Admin > Preferences":?event=prefs#prefs_group_oui_player tab to keep your preference values untouched.

h4. Via Composer (not available yet)

bc. $ composer update nicolasgraph/oui_player

h3. Uninstall

h4. From the admin interface

# Check the box on the left of the plugin row under the "Admin > Plugins":?event=plugin.
# open the select list at the bottom of the plugins table and choose _Delete_.
# confirm the plugin deletion.

h4. Via Composer (not available yet)

bc. $ composer remove nicolasgraph/oui_player

h2. Extension creation

h3. Instructions

A provider related extension can be created by extending the @Oui\Provider@ class in a plugin author prefix related namespace.
As oui_player_provider may be not installed yet while enabling the new extension; it seems safe to wrap the new child class in a related condition clause.
Once the class created, in most cases, it should only require to override some static properties.

h4. Properties

- @patterns@ := Associative array of @'scheme'@, as a RegEx to check against media URL's, and @'id'@, as the index of the media ID in potential matches.
Multiple @$patterns@ can be defined through a multidimensional array. In this case, two optional subkeys can be useful: @prefix@ defines a string to prepend to the matched media ID, and @glue@ defines a string to append to the ID if multiple schemes can be matched at once. =:
- @src@ := URL base of the provider player. =:
- @glue@ := Array of three strings to append, between the URL player base and media info, between the media info and the player parameters, and finally, between the player parameters.
- @dims@ := Associative array of @'width'@, @'height'@ and @'ratio'@ values as strings.
- @params@ := Associative array of player paramaters and their related @'default'@ value and @'valid'@ values.
Player parameters are used to set plugin preferences and tag attributes.
@'valid'@ values can be set to an array of strings or to a valid input type used for the plugin preference.
If an optional @force@ key is set, the parameter will be used by the player even if its value is set to the default one. =:

h3. Example

bc.. namespace Oui {

    if (class_exists('Oui\Provider')) {

        class Bandcamp extends Provider
        {
            protected static $patterns = array(
                'album' => array(
                    'scheme' => '#((http|https)://bandcamp\.com/(EmbeddedPlayer/)?album=(\d+)/?)#i',
                    'id'     => 4,
                    'prefix' => 'album=',
                    'glue' => '/',
                ),
                'track' => array(
                    'scheme' => '#((http|https)://bandcamp\.com/(EmbeddedPlayer/)?[\S]+track=(\d+)/?)#i',
                    'id'     => 4,
                    'prefix' => 'track=',
                ),
            );
            protected static $src = '//bandcamp.com/';
            protected static $glue = array('EmbeddedPlayer/', '/', '/');
            protected static $dims = array(
                'width'  => '350',
                'height' => '470',
                'ratio'  => '',
            );
            protected static $params = array(
                'size'      => array(
                    'default' => 'large',
                    'force'   => true,
                    'valid'   => array('large', 'small'),
                ),
                'artwork'   => array(
                    'default' => '',
                    'valid'   => array('', 'none', 'big', 'small'),
                ),
                'bgcol'     => array(
                    'default' => '#ffffff',
                    'valid'   => 'color',
                ),
                'linkcol'   => array(
                    'default' => '#0687f5',
                    'valid'   => 'color',
                ),
                'tracklist' => array(
                    'default' => 'true',
                    'valid'   => array('true', 'false'),
                ),
            );
        }
    }
}

h2. Credits

h3. Author

"Nicolas Morand":https://twitter.com/NicolasGraph
_Thank you to the Textpattern community and the core team._

h3. License

This plugin is distributed under "GPL v2.0":https://www.gnu.org/licenses/gpl-2.0.txt.

oui_player_provider version 1.0.0-BETA4, Copyright (C) 2018 Nicolas Morand
This Textpattern plugin comes with ABSOLUTELY "NO WARRANTY":https://www.gnu.org/licenses/gpl-2.0.html#section11.
This is free software, and you are welcome to redistribute it "under certain conditions":https://www.gnu.org/licenses/gpl-2.0.html#SEC3.

h3. Changelog

* *oui_player_provider v1.0.0-BETA4* (2018-08-15)
** Added: pluggable_ui related callback on each rendered player;
** Added: HTML5 validation;
** changed: now works as an extension base for _oui_player_; any plugin extending the @\Oui\Provider@ class in an author prefix related namespace will be plugged into _oui_player_;
** added: manages responsive embedding;
** changed: does not return any player if there is nothing to play (triggers an error);
** Added: triggers an error if an attribute value is not valid (for defined valid values only);
** changed: code rework:
*** uses an author prefix related namespace;
*** declares providers related dedicated tags;
*** instances created/get via @Txp::get()@;
*** allows @$dims@/@$prefs@ to accept a string as default value.
* *oui_player v1.3.1* (2017-07-13)
